name: KloneKit CI/CD

#
# TRIGGERS
#
on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

#
# PERMISSIONS
#
permissions:
  contents: write # To create releases
  pages: write    # To deploy to GitHub Pages
  id-token: write # To authenticate with GitHub Pages

#
# JOBS
#
jobs:
  # ----------------------------------------------------------------
  # LINT: Ensure code quality and style consistency.
  # ----------------------------------------------------------------
  lint:
    name: Lint Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.55

  # ----------------------------------------------------------------
  # TEST: Run the full test suite.
  # ----------------------------------------------------------------
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Run tests with coverage
        run: make test

  # ----------------------------------------------------------------
  # BUILD: Compile binaries for all target platforms.
  # ----------------------------------------------------------------
  build:
    name: Build Binaries
    needs: [lint, test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-os: [linux, darwin, windows]
        go-arch: [amd64]
        include:
          - os: windows-latest
            binary-ext: ".exe"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Compile the binary
        run: go build -o klonekit${{ matrix.binary-ext }} ./cmd/klonekit
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: klonekit-${{ matrix.os }}
          path: klonekit${{ matrix.binary-ext }}

  # ----------------------------------------------------------------
  # DEPLOY-DOCS: Deploy the user guide to GitHub Pages.
  # ----------------------------------------------------------------
  deploy-docs:
    name: Deploy User Guide
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./user-guide
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  # ----------------------------------------------------------------
  # RELEASE: Create a GitHub Release when a tag is pushed.
  # ----------------------------------------------------------------
  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download all binary artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            binaries/klonekit-ubuntu-latest/*
            binaries/klonekit-macos-latest/*
            binaries/klonekit-windows-latest/*
